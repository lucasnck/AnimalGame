/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import controller.BaseBean;
import dao.AnimalDAO;
import dao.AttributeDAO;
import dao.TypeDAO;
import entity.Animal;
import entity.Attribute;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author lucas
 */
public class FirstQuestion extends javax.swing.JFrame {

    private BaseBean baseBean;

    /**
     * Creates new form FirstQuestion
     */
    public FirstQuestion() {
        initComponents();
    }

    public FirstQuestion(BaseBean baseBean) {
        this.baseBean = baseBean;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnYes = new javax.swing.JToggleButton();
        btnNo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("O animal que você pensou vive na água?");

        btnYes.setText("Sim");
        btnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesActionPerformed(evt);
            }
        });

        btnNo.setText("Não");
        btnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(btnYes)
                .addGap(85, 85, 85)
                .addComponent(btnNo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnYes)
                    .addComponent(btnNo))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoActionPerformed
        //if user say the animal that they think is not water type
        setVisible(false);
        //set the selected type of the animals
        baseBean.setSelectedType(new TypeDAO().getByName("terra"));
        //if the data base contains animals
        if (baseBean.getAnimals() != null) {
            //if data base storage attributtes
            if (baseBean.getAttributes() != null) {
                //if database has more than 0 attributes
                if (baseBean.getAttributes().size() > 0) {
                    //last attribute question of the selected animal type
                    //instantiate the DAO
                    AnimalDAO animalDAO = new AnimalDAO();
                    //get all ground type animals
                    List<Animal> animals = animalDAO.listByType(baseBean.getSelectedType());
                    //make animals the selected animals to check at runtime
                    baseBean.setSelectedAnimals(animals);
                    //if list contains more than 1 animal
                    if (baseBean.getSelectedAnimals().size() > 1) {
                        //the selected attribute at runtime is getting from the last animal in the list
                        //the attribute is the first attribute of the animal
                        Attribute attribute = new AttributeDAO().getById(animals.get(animals.size() - 1).getAttributesID().get(0));
                        //open the question attribute, this ask to player if the animal that they think has this characteristic
                        QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(attribute);
                        questionAttribute.setVisible(true);
                    } else {
                        //list only have the basic animal
                        baseBean.openQuestionAnimal(new AnimalDAO().getByName("Macaco"));
                    }
                } else {
                    //seems that the database attributes is empty
                    baseBean.openQuestionAnimal(new AnimalDAO().getByName("Macaco"));
                }
            } else {
                //if database does not have attributes, seems that player is playing first time
                baseBean.openQuestionAnimal(new AnimalDAO().getByName("Macaco"));
            }
        } else { 
            //no animals in the db, display error
            //custom title, error icon
            JOptionPane.showMessageDialog(this,
                    "Nenhum animal criado",
                    "Erro banco de dados vazio",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNoActionPerformed

    private void btnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesActionPerformed
        //if user say the animal that they think is water type
        setVisible(false);
        baseBean.setSelectedType(new TypeDAO().getByName("àgua"));
        if (baseBean.getAnimals() != null) {
            if (baseBean.getAttributes() != null) {
                if (baseBean.getAttributes().size() > 0) {
                    //last attribute question
                    AnimalDAO animalDAO = new AnimalDAO();
                    List<Animal> animals = animalDAO.listByType(baseBean.getSelectedType());
                    baseBean.setSelectedAnimals(animals);
                    if (baseBean.getSelectedAnimals().size() > 1) {
                        Attribute attribute = new AttributeDAO().getById(animals.get(animals.size() - 1).getAttributesID().get(0));
                        QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(attribute);
                        questionAttribute.setVisible(true);
                    } else {
                        baseBean.openQuestionAnimal(new AnimalDAO().getByName("Tubarão"));
                    }
                } else {
                    baseBean.openQuestionAnimal(new AnimalDAO().getByName("Tubarão"));
                }
            } else {
                baseBean.openQuestionAnimal(new AnimalDAO().getByName("Tubarão"));
            }
        }
    }//GEN-LAST:event_btnYesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstQuestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnNo;
    private javax.swing.JToggleButton btnYes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
