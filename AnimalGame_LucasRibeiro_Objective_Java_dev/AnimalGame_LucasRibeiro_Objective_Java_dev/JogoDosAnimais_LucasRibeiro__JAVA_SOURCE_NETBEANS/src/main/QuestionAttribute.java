/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import controller.BaseBean;
import dao.AnimalDAO;
import dao.AttributeDAO;
import entity.Animal;
import entity.Attribute;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author lucas
 */
public class QuestionAttribute extends javax.swing.JFrame {

    private BaseBean baseBean;

    private Attribute selectedLastAttribute;

    /**
     * Creates new form QuestionAttribute
     */
    public QuestionAttribute() {
        initComponents();
    }

    public QuestionAttribute(BaseBean baseBean) {
        this.baseBean = baseBean;
        initComponents();
    }

    public void showQuestion() {
        if (selectedLastAttribute == null) {
            if (baseBean.getSelectedAttributes() != null) {
                if (baseBean.getSelectedAttributes().size() > 0) {
                    selectedLastAttribute = baseBean.getSelectedAttributes().get(baseBean.getSelectedAttributes().size() - 1);
                }
            }
        }
        labelQuestion.setText("O animal que você pensou " + selectedLastAttribute.getName() + "?");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelQuestion = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnYes = new javax.swing.JToggleButton();
        btnNo = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelQuestion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnYes.setText("Sim");
        btnYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYesActionPerformed(evt);
            }
        });

        btnNo.setText("Não");
        btnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(btnYes)
                .addGap(85, 85, 85)
                .addComponent(btnNo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnYes)
                    .addComponent(btnNo))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYesActionPerformed
        //if animal that user think contains the selected attribute
        AnimalDAO animalDAO = new AnimalDAO();
        //set the selected animals are those who have the selected attribute
        baseBean.setSelectedAnimals(animalDAO.listAnimalByAttribute(baseBean.getSelectedAnimals(), selectedLastAttribute.getId()));
        if (baseBean.getSelectedAttributes() == null) {
            baseBean.setSelectedAttributes(new ArrayList<>());
        }
        //add the selected attribute to the runtime base
        baseBean.getSelectedAttributes().add(selectedLastAttribute);
        List<Animal> animals = baseBean.getSelectedAnimals();
        //if database contain more tha one animal
        if (animals.size() > 1) {
            //select first animal from the list and get they attribute to ask to user if the animal has this feature
            Animal fisrtAnimal = animals.get(animals.size()-1);
            //check if the animal has more than one attributes
            if (fisrtAnimal.getAttributesID().size() > 1) {
                //the first animal has more than one attribute
                for (Long id : fisrtAnimal.getAttributesID()) {
                    if (!id.equals(selectedLastAttribute.getId())) {
                        //open another QuestionAttribute
                        //set the selected attribute to null for getting the last attribute from the selected attributes at runtime
                        QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(new AttributeDAO().getById(id));
                        questionAttribute.setSelectedLastAttribute(null);
                        questionAttribute.setVisible(true);
                        break;
                    }
                }
            } else {
                //if not, ask to the user if the animal is the animal that they think
                baseBean.openQuestionAnimal(animals.get(0));
            }
        } else {
            //one animal in the list, ask to the user if the animal is the animal that they think
            baseBean.openQuestionAnimal(animals.get(animals.size()-1));
        }
    }//GEN-LAST:event_btnYesActionPerformed

    private void btnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoActionPerformed
        List<Animal> animals = baseBean.getSelectedAnimals();
        animals = new AnimalDAO().listAnimalDontHaveThisAttribute(animals, selectedLastAttribute.getId());
        baseBean.setSelectedAnimals(animals);
        if (animals.size() > 0) {
            //select first animal and get they attribute to ask to user if the animal has this feature
            Animal firstAnimal = animals.get(animals.size() - 1);
            if (firstAnimal.getAttributesID() != null) {
                if (firstAnimal.getAttributesID().size() > 1) {
                    //the first animal has more than one attribute
                    for (Long id : firstAnimal.getAttributesID()) {
                        if (!id.equals(selectedLastAttribute.getId())) {
                            QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(new AttributeDAO().getById(id));
                            questionAttribute.setVisible(true);
                            break;
                        }
                    }
                } else if (baseBean.getSelectedAttributes() != null) {
                    if (baseBean.getSelectedAttributes().size() > 0) {
                        //the first animal only has the selected attribute
                        firstAnimal = animals.get(animals.size() - 1);
                        for (Long id : firstAnimal.getAttributesID()) {
                            if (!id.equals(selectedLastAttribute.getId())) {
                                QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(new AttributeDAO().getById(id));
                                questionAttribute.setVisible(true);
                                break;
                            }
                        }
                    } else {
                        firstAnimal = animals.get(animals.size() - 1);
                        selectedLastAttribute = new AttributeDAO().getById(firstAnimal.getAttributesID().get(0));
                        QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(selectedLastAttribute);
                        questionAttribute.setVisible(true);
                    }
                } else {
                    firstAnimal = animals.get(animals.size() - 1);
                    selectedLastAttribute = new AttributeDAO().getById(firstAnimal.getAttributesID().get(0));
                    QuestionAttribute questionAttribute = baseBean.openQuestionAttribute(selectedLastAttribute);
                    questionAttribute.setVisible(true);
                }
            } else {
                //one animal in the list, ask to the user if the animal is the animal that they think
                baseBean.openQuestionAnimal(firstAnimal);
            }
        }
    }//GEN-LAST:event_btnNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionAttribute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionAttribute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionAttribute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionAttribute.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionAttribute().setVisible(true);
            }
        });
    }

    public Attribute getSelectedLastAttribute() {
        return selectedLastAttribute;
    }

    public void setSelectedLastAttribute(Attribute selectedLastAttribute) {
        this.selectedLastAttribute = selectedLastAttribute;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnNo;
    private javax.swing.JToggleButton btnYes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelQuestion;
    // End of variables declaration//GEN-END:variables
}
